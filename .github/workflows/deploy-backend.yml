name: API CI/CD

on:
  push:
    branches: [timotej]
  pull_request:
    branches: [timotej]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore API dependencies
        run: dotnet restore dj-api/dj-api.csproj

      - name: Build API
        run: dotnet build -c Release --no-restore dj-api/dj-api.csproj

      - name: Restore DjTests dependencies
        run: dotnet restore DjTests/DjTests.csproj

      - name: Build DjTests
        run: dotnet build -c Release --no-restore DjTests/DjTests.csproj

      - name: Run tests
        run: dotnet test -c Release --no-build DjTests/DjTests.csproj --collect:"XPlat Code Coverage"

  build-and-push-docker:
    needs: build-and-test
    if: (github.ref == 'refs/heads/timotej') && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push API Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/dj-api:${{ github.sha }},${{ secrets.DOCKERHUB_USERNAME }}/dj-api:latest
          build-args: |
            ASPNETCORE_URLS=http://+:5152
            ConnectionStrings__DbConnection=${{ secrets.MONGODB_CONNECTION_STRING }}
            JWTSecrets__issuer=${{ secrets.JWT_ISSUER }}
            JWTSecrets__audience=${{ secrets.JWT_AUDIENCE }}
            JWTSecrets__secretKey=${{ secrets.JWT_SECRET_KEY }}
            JWTSecrets__expires=${{ secrets.JWT_EXPIRES }}